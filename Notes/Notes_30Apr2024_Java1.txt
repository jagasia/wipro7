Hello all, I'm from RPS support team. Any issues with the session please ping in the chat box or drop a mail to ngasupport@rpsconsulting.in

Day #4:
Java day 1:
-------------------
1.0	Java Fundamentals
1.1	Java Environment Setup
	Installing JDK
	Configuring IDEs (Eclipse, IntelliJ IDEA)
1.2	Java Syntax and Basic Constructs
	Primitive Data Types and Variables
	Operators and their Precedence
	Control Flow Statements (if, switch, loops - for, while, do-while)
--------------------------------------------
Java
	history of java, how they named java (sun microsystems and later this was adopted by Oracle corporation)
	every new syntax has a ref number JSR

we have cloud lab and 
	Java 11 is installed there
	Eclipse is available 

Create our first java project in eclipse ( in cloud lab )
	eclipse asked me to choose the directory for workspace.	
	I have choosen c:\users\Administrator\training\java folder so that all my projects i create will be stored there.
	in eclipse
		File -> New -> Project
			among lot of project types, i will choose "Java Project"
	type project name
	check the java SE version		it was 17. I changed it to 11	(because, in my system java 11 only is installed)

A java project created in eclipse has lot of folders
	src
	bin

src 
	folder contains all the source code 		.java files
bin
	folder contains all the compiled code		.class files



Hello world program in java (using eclipse)

	right click the project
		New -> Class

	name of the class : 
		App
	tick the public static void main check box and click finish button



public class App
{
	public static void main(String []args)
	{
		System.out.println("Hello world");
	}
}


ctrl+space
	is used to auto complete the code

To RUN the program:
	open the program and press
		ctrl+F11 

ctrl+F11
click the green arrow to run
right click code 
	run as -> Java Application



Window 
	show view
		package explorer
		console
---------------------------------------------------------
class name
	must follow PascalCase
	must start with UPPER case
	ex:
		App
		Employee
		Main
		ContractEmployee


method name
	must follow camelCase
		first letter is in LOWER case. Every next word first letter in UPPER case
	ex:
		acceptDetails
		calculateSimpleInterest

variable/ object name
	must follow camelCase
		first letter is in LOWER case. Every next word first letter in UPPER case
	ex:
		int x;
		float averageScore;		

variable names must be meaningful (except the local variables and for loop index variables)
	ex:
		count
		maxCount
		isFirst
	
indentation to understand the blocks properly
public class App
{
	public static void main(String []args)
	{
		System.out.println("Hello world");
	}
}


write comments to understand the code
Primitive Data Types and Variables
-----------------------------------------------
List out all the primitive data types in java language and
paste it as single message in chat window

in java language, there are only 8 primitive data types.
	boolean
	byte
	short
	int
	long
	float
	double
	char

boolean		true/false		1 bit
	in c, c++ language,
	---------------------
	if(i=0)		//this is ok in c, c++ but NOT ALLOWED in Java
	{
		printf("Yes");
	}
	else
	{
		printf("No");
	}






i=0	is not a boolean expresssion		it does not return true/false
i==0	is a boolean expression

in C, C++
	0 is called as false 
	any non 0 is called as true
	-1 is true		1 is true		any number other than 0 is true

but in java, it is not like that
	i==0	

0000 0000			lowest value in 1 byte representation
1111 1111			highest value in 1 byte representation

			256/2	=	128

between these 2, there can be 256 possible values


boolean		1 bit		true/false
byte		1 byte		-128 to 127
short		2 bytes		-32768 to 32767
int		4 bytes		-2147483648 to 2147483647
long 		8 bytes
float		4 bytes
double		8 bytes
char		2 bytes

imagine if you have use "int" datatype for the account balance in banking project?
	the customer already have 2147482648 in their account,
	now, they deposit 1001 rupees and their account balance will become -2147483648
	will you accept this?????


every character has a numeric representation ASCII
what is the ASCII value for 0		48
		A		65
		a		97

ASCII is an 8 bit representation so this ASCII character set is having only 256 characters

Unicode is a 16 bit representation of characters.
Java use unicode hence every character is represented in 16 bit	2 bytes

variable and constants:
-----------------------------
	int x=20;
	x=30;
	x=10;

		i am able to change the value of a variable.

	final int x=20;
	x=30;	/NOT allowed because, final is used to declare constants

Variables can be 2 types:
	value type variables
	reference type variables

value type variables:
	If you create a variable of any of those 8 primitive data types,
	they are value type variables.

reference type variables:
	If you create a variable of any type other than those 8 primitive types, 
	they are reference type variables.
	ex:
		String str;
		Date dt;
		Employee e;
			these are reference type variables.

Value type?
	if you go and see what is stored in a variable?
		if you find value inside the memory then it is value type
		if you find reference to a heap then it is ref type


Objects are stored in heap

Stack vs Heap 
	memory structures in java

Activity:
	Understand the difference between
		value types
		reference types
	Stack
	Heap
-------------------------------------------
Stack and heap are memory structures.
What is stored in stack and what is stored in heap?
	if you declare a variable inside a method (function) then it is created in Stack only.
	Objects are always created in Heap.

	
	public static void main(Strng args[])
	{
		Date dt;		//dt is created in stack
		new Date();	//an object is created in heap
		//the reference of object (heap) is not stored in stack. So this dt (locker) does not have anything. null
		//here dt = null

	}




	public static void main(Strng args[])
	{
		Date dt=new Date();	
	}

new Date() is an object in heap.		Its reference is kept in stack (dt)

dt is a variable in stack
new Date() is an object in heap.
--------------------------------------------------
-----------------------------------------------------

Date dt1;			//if you open this locker, nothing is found. 	so dt1 = null
Date dt2=new Date();		//if you open this locker dt2, you find the key of a room heap

dt1=dt2;			//you have 2 keys for one heap memory 	new Date
			//one key is kept in dt2 and another key is kept in dt1		

In the above example, we have created one object and its reference is stored in 2 stack variable.

2 variables, 1 object

Date dt3;			//dt3 is not an object of Date.	It is a reference variable, which can hold ref of an object

Only when we use "new" operator, we are creating an object.


int i=20;			//int is a primitive data type. so if you open the locker "i", you find value (20). not reference


class Employee
{
	int id;		//even though id is a primitive type variable, it is not created in stack. 
			//an object of Employee is created in heap only. Now, we have not created any object.
			//this class is a type definition. 


	public static void main(String []args)
	{
		Employee raja=new Employee();		//only now, an object of Employee is created in heap and
						//its reference is kept in raja variable in stack
	}

}

---------------
Operators:
-------------
arithmetic operators
	+	-	*	/	%
bitwise operators
	&	|	!
logical operators
	!	&&	||
Comparison operators
	>	<	>=	<=	!=
Shift operators
	>>	<<	>>>
Ternary operator
	?:
Increment
	++	--
Assignment
	=	+=	-=	*=	/=	%=

brackets are always allowed to clarify or change the precedence

BODMAS		B for Bracket

(x+y)*z	is different from 	x+y*z

- negative + positive


Operators are overloaded already, WE CANNOT DO OPERATOR OVERLOADING in Java

	x+y		what will happen?


if(i<j &&i<k)


if(i<j)
{
	if(i<k)
	{
		//i is the smallest
	}
}


if condition using logical && or || operator
nested if condition

How to get input from the user?
	Scanner 
	or
	Command line argument

How to get command line arguments from user (in eclipse)
	the main method has arguments (that is the command line arguments)
1) in eclipse
	Run -> Run Configurations

		arguments tab
			Program Arguments
				10 20 30 40 50


enter your arguments using any separator	space or tab
dont use comma at all
-------------------------------
Scanner
	how to get input from the user?

	import java.util.Scanner;

	Scanner sc=new Scanner(System.in);
	
Scanner class has
	lot of methods
		next();
		nextInt();
		nextFloat();
		nextLong();
	
for all primitive type (except char data type), scanner provides a method to get input of that type

only when you want to get char input from user?
	sc.next().charAt(0);		//next() method returns a String. string provide method charAt(index)
				//since only 1 char input, its index is always 0

from all these next methods, ONE method differs
	nextLine()		this is the only method that is used to accept String input until a newline is found

all other next methods accept any delimiter

input:
	2 3		this is 2 input
	2	3	this is 2 input
	
all next methods accept input until any delimiter is found
	space
	tab
	newline

so how can i get input like multiple words
	ram kumar		is actually 2 words


	sc.next() 		captures only "ram" 		and "kumar" is captured by another next method

	if i want to capture "ram kumar" as a single input
	i should use 	
		sc.nextLine();


But this nextLine() will create trouble when you combine using with other next methods


Challenge:
---------------
get the following inputs and store them in
	int i;
	String name;
	float f;

input:
	120
	Ram Kumar
	1.2

output:
	120
	Ram Kumar
	1.2

remember "Ram Kumar" must be stored in name variable.


Problem:
	whenever you use sc.nextLine() after any other next methods, you get this problem java.util.InputMismatchException

how to solve this problem?
	i) whenever you want to use sc.nextLine() method, you can use a different scanner object
		means, a separate scanner object like sc1
	ii) or check if the input is blank and get nextLine() again


Task:
-------
Dice Game I

Each player will be allowed to throw  a dice 2 times. The points for each player will be calculated as follows :
If the values thrown are different, the points scored is equal to the sum of the 2 values.
If the values thrown are the same, the points scored is equal to double the sum of the 2 values.

Write a program to calculate the points scored by a player.

Input and Output Format:

Input consists of 2 integers. The valid range of inputs is from 0 to 6. [ Both 0 and 6 inclusive]
Output the points scored. In case of invalid inputs, print “Invalid Input”.

Refer sample input and output for formatting specificaions.

[All text in bold corresponds to input and the rest corresponds to output.]
Sample Input and Output 1:

Enter Value 1:
5
Enter Value 2:
6
The points scored is 11

Sample Input and Output 2:

Enter Value 1:
5
Enter Value 2:
5
The points scored is  20

Sample Input and Output 3:

Enter Value 1:
8
Enter Value 2:
6
Invalid Input 

--------------------------------------------
Dice Game II
Each player will be allowed to throw a dice 2 times. The points for each player will be calculated as follows :
The points scored is the absolute difference between 8 and the sum of the 2 values, provided the sum of the 2 values is less than 8.
In all other cases, the point  scored is double the absolute difference between 8 and the sum of the 2 values.

Write a program to calculate the points scored by a player.

Input and Output Format:
Input consists of 2 integers. The valid range of inputs is from 0 to 6.
Output the points scored. In case of invalid inputs, print “Invalid Input”.

Refer sample input and output for formatting specificaions.

[All text in bold corresponds to input and the rest corresponds to output.]
Sample Input and Output 1:

Enter Value 1:
5
Enter Value 2:
6
The points scored is 6

Sample Input and Output 2:

Enter Value 1:
3
Enter Value 2:
2
The points scored is  3

Sample Input and Output 3:

Enter Value 1:
8
Enter Value 2:
6
Invalid Input 


--------------------

if(true)
{
}else if(true)
{
}else if(another condition)
{
}else
{
}

-----------------------------------------
Arrays in Java
--------------------
in C, C++ arrays are created like:
	int arr[10];
but Java, the above is syntactically wrong.

in Java, same is:
	int arr[]=new int[10];
(or)
	int []arr=new int[10];

while declaration, it can be 
	int []arr;
	int arr[];

both above are declaration.

but until we specify the size of the array, it is not created.
"new" operator is used to create an array.

Sometimes, we can initialize the values to the array while creating
in that case, the size of the array is equal to the number of elements initialized to the array.

int arr[]=new int[6];
or
int arr[]={88,22,33,11,66,44,55};		//this will also created an array

in Java, arrays are Jagged.
Jagged means uneven.

int arr[][]=new int[10][];		//you can consider this as 10 rows and each row can have columns of different length

arr[0]		is the first row
arr[0]=new int[8];	//first row have 8 columns
arr[1]=new int[10];	//second row has 10 columns

like wise, every row can have different number of columns
that is called as Jagged.

if you want to evenly created array
	int arr[][]=new int[10][10];	//


int i;			//i is a variable whose value can be int data type
i=20;			//we assign a value to i
Date dt;			//dt is a variable, which is not usable untile you assign an object of Date
dt=new Date();		//we assign a reference to dt

Date dt2=dt;		//reference of dt is assigned to dt2.

primitives are only value types
all other types are reference types

data type	(primitive data type)
type
	Date is a type
	String is a type


Array is a reference type
	int arr[];			//int is a primitive data type

				//but array is a reference type

an array allows us to maintain multiple values under same name
but multiple values cannot be stored in one memory location		(locker)

Arrays are stored in multiple locations, but its first element's reference is kept in the array name

	arr	is the reference to the first element of the array


Operations on array:
	sort an array
	reverse an array
	traverse an array		(display all element)
	

How can we display all elements of an array?
	i) for-each loop
	ii) normal for loop
	
Practise creating a single dimensional array
and then 2 dimensional

int arr[][]=new int[10][10];

for(int  row=0;i<arr.length;row++)
{
	for(int col=0;col<arr[i].length;col++)
	{
		//arr[row][col]=sc.nextInt();
	}
}

for(int  row=0;i<arr.length;row++)
{
	for(int col=0;col<arr[i].length;col++)
	{
		System.out.println(arr[row][col]);
	}
}

Task:
-------
Array Product

Write a program to find the product of all 2 digit numbers in an array.

If the size of the input array is negative or if any of the input elements is negative , print “Invalid Input” and terminate the program.

Input and Output Format:

Input consists of n+1 integers. The first integer corresponds to n, the number of elements in the array. The next 'n' integers correspond to the elements in the array.
Output consists of an integer that corresponds to the product.

Refer sample output for formatting specifications.
Assume that the maximum number of elements in the array is 20.

Sample Input 1:
6
2
7
10
3
13
100

Sample Output 1:
130

Sample Input 2:
-4

Sample Output 2:
Invalid Input

Sample Input 3:
4
1
-2

Sample Output 3:
Invalid Input 

-------------------------------------------------------------------
Task:
-------
Percentage of Runs
Sam is a cricket freak, who loves to collect statistics about the matches. Suppose, a batsman scored X runs which included Y fours and Z sixes, Sam wants to calculate the  percentage of the total score he made by running between the wickets.
Write a program to help Sam .
Input Format:
First input is an integer X that denotes the total runs scored.
Second input is an integer Y that denotes the  number of fours he has scored.
Third input is an integer Z that denotes the  number of sixes he has scored.
[Note: Assume all inputs are valid.] 
Output Format:
Output is a double value that denotes the percentage of runs he made by running between the wickets(rounded off to 2 decimal places).
Sample Input 1:
110
3
8
Sample Output 1:
45.45
Sample Input 2:
60
2
1
Sample Output 2:
76.66

Explanation for sample 1:
Total Runs = 110
No. of Fours = 3
No. of sixes = 8
Total runs scored by boundaries = 4*3 + 8*6 = 60
Therefore, runs scored by running between the wickets = 110 - 60 = 50
Percentage scored by running =(50/110)*100 =  45.45 



Math.round(45.4545)	=	45
Math.round(45.5454)	=	46

round, floor, ceiling methods return int only
	not 2 digits or 3 digits choice we have

so, better, if you multiply the number by 100 and then do round/ceil/floor then we can again divide it to get 2 digit precision

------------------------------------------------
Maximum Product
Playing with arrays has become a hobby for Arun. This time Arun wants to find the greatest number in the array such that it is the product of any two numbers in the array.
Write a program to help Arun to the do the task. If no such number exists, then print -1.
[Note: The two number that are used to find the product can be the number itself.  For example, if the array elements are [1,2,3] , then 1*3 = 3 will be the solution for this array.]

Input Format :
First input is an integer value that denotes the size of the array.
Second input is a series of integers separated by space that denotes the array values.

Output Format :
Output is an  integer that denotes the maximum product.

Sample Input 1:
5
35 30 7 6 5
Sample Output 1:
35

Sample Input 2:
5
2 4 6 89 78
Sample Output 2:
-1
------------------------------------------------




----------------------------
Suppose, how do you find the maximum number of an array?
	Consider without sorting an array

	keep a global variable "max" and keep it as lowest value initially.
	iterate each element  of the array one by one
		if current element > max then
			update max
	end of the loop
		you will get maximum value stored in the max variable.


	The output is not about the largest number of the array
	if there are many numbers which are result of product of any 2 numbers

	IN CLoud lab
		http://10.10.16.125:8929/b76user01/java




in c, c++
we can create a swap function that accepts parameters by reference
	using pointers

in java, all primitive type arguments are passed by value only
all reference type arguments are passed by reference only
	BUT WRAPPER classes have peculiar behavior

	For 8 primitive data types, there are corresponding wrapper classes

	byte	Byte
	short	Short
	int	Integer
	long	Long
	float	Float
	double	Double
	char	Character
	boolean	Boolean

these wrappers automatically unbox themselves

	int i=20;
	Integer var=i;		//here, autoboxing happened

				//primitive to Wrapper conversion is automatic and hence called as auto boxing
class Integer
{
	int i;		// an int is boxed inside Integer class. 
}


Integer x=20;			//20 is primitive, but it is auto boxed to Integer type
int y=x;				//auto unboxed to int

	swap(Integer i, Integer j)		they will automatically become int, int	and always by val not by ref

-----------------------------------------------
Run Length IV
 
Write a program to find the length of the longest running sequence of even numbers in the given array. Also find the starting index of the longest running sequence of even numbers.
 
Example :
 
Consider the array ... { 2, 16, 15, 2, 6, 8, 10, 7, 22, 4 , 6}
 
The 3 even number sequences in this array are {2, 16}, {2, 6, 8, 10} and {22, 4, 6}.
The longest running even number sequence is {2, 6, 8, 10}
The length of the longest running even number sequence is 4 and the starting index is 3.
 
Note:
The array indexing starts from 0.
If there are multiple choices, select the choice where the starting index is minimum.
 
Input and Output Format:
 
The first line of the input consists of an integer n that corresponds to the number of elements in the array. The next 'n' lines of input consists of a single integer that correspond to the elements in the array.
 
The first line of the output consists of the length of the longest running even number sequence and the second line of the output consists of the starting index of the longest running even number sequence.
 
Sample Input :
11
2
16
15
2
6
8
10
7
22
4
6
 
Sample Output :
4
3
------------------------------------------------






